version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    container_name: doc-processor-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,lambda
      - DEBUG=1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - doc-processor-network

  # SQS Queue and Lambda setup service
  aws-setup:
    image: amazon/aws-cli:latest
    container_name: doc-processor-aws-setup
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    command: >
      sh -c "
        echo 'Waiting for LocalStack to be ready...' &&
        sleep 10 &&
        echo 'Creating SQS queue...' &&
        aws --endpoint-url=http://localstack:4566 sqs create-queue --queue-name w2-file-events-queue &&
        echo 'SQS queue created successfully' &&
        echo 'Creating S3 bucket...' &&
        aws --endpoint-url=http://localstack:4566 s3 mb s3://w2-bucket &&
        echo 'Configuring S3 bucket events...' &&
        QUEUE_URL=\$$(aws --endpoint-url=http://localstack:4566 sqs get-queue-url --queue-name w2-file-events-queue --query 'QueueUrl' --output text) &&
        echo 'Queue URL: \$$QUEUE_URL' &&
        QUEUE_ARN=\$$(aws --endpoint-url=http://localstack:4566 sqs get-queue-attributes --queue-url \$$QUEUE_URL --attribute-names QueueArn --query 'Attributes.QueueArn' --output text) &&
        echo 'Queue ARN: \$$QUEUE_ARN' &&
        aws --endpoint-url=http://localstack:4566 s3api put-bucket-notification-configuration \
          --bucket w2-bucket \
          --notification-configuration '{
            \"QueueConfigurations\": [
              {
                \"Id\": \"w2-file-events\",
                \"QueueArn\": \"'$$QUEUE_ARN'\",
                \"Events\": [\"s3:ObjectCreated:*\"],
                \"Filter\": {
                  \"Key\": {
                    \"FilterRules\": [
                      {
                        \"Name\": \"prefix\",
                        \"Value\": \"uploads/\"
                      }
                    ]
                  }
                }
              }
            ]
          }' &&
        echo 'S3 events configured' &&
        tail -f /dev/null
      "
    networks:
      - doc-processor-network

  # SQS Handler Lambda Function
  sqs-handler:
    build:
      context: ./lambda_functions/sqs_handler
      dockerfile: Dockerfile
    container_name: doc-processor-sqs-handler
    depends_on:
      - aws-setup
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    networks:
      - doc-processor-network

  # Core Processor Lambda Function
  core-processor:
    build:
      context: ./lambda_functions/core_processor
      dockerfile: Dockerfile
    container_name: doc-processor-core-processor
    depends_on:
      - aws-setup
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    networks:
      - doc-processor-network

  backend:
    build:
      context: ./doc_processor_backend
      dockerfile: Dockerfile
    container_name: doc-processor-backend
    ports:
      - "8000:8000"
    volumes:
      - ./doc_processor_backend:/app
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - doc-processor-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doc-processor-frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - doc-processor-network

networks:
  doc-processor-network:
    driver: bridge
